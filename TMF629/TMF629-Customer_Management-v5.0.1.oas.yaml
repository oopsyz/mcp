openapi: 3.0.1
info:
  title: Customer Management
  description: '**TMF API Reference : TMF - 629 Customer Management**'
  version: 5.0.1
servers:
  - url: '{apiRoot}/tmf-api/customer/v5/'
    variables:
      apiRoot:
        default: 'https://serverRoot'
        enum:
          - 'https://serverRoot'
tags:
  - name: customer
    description: Operations for Customer Resource
  - name: notification listener
    description: Notifications for Resource Lifecycle and event notifications
  - name: events subscription
    description: Endpoints to register and terminate an Event Listener
paths:
  /customer:
    get:
      tags:
        - customer
      summary: List or find Customer objects
      description: List or find Customer objects
      operationId: listCustomer
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200CustomerArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - customer
      summary: Creates a Customer
      description: This operation creates a Customer entity.
      operationId: createCustomer
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/Customer_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201Customer'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/customer/{id}':
    get:
      tags:
        - customer
      summary: Retrieves a Customer by ID
      description: >-
        This operation retrieves a Customer entity. Attribute selection enabled for all first level
        attributes.
      operationId: retrieveCustomer
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200Customer_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    patch:
      tags:
        - customer
      summary: Updates partially a Customer
      description: This operation updates partially a Customer entity.
      operationId: patchCustomer
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/Customer_MVO'
      responses:
        '200':
          $ref: '#/components/responses/200Customer_Patch'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - customer
      summary: Deletes a Customer
      description: This operation deletes a Customer entity.
      operationId: deleteCustomer
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /hub:
    post:
      operationId: createHub
      summary: Create a subscription (hub) to receive Events
      description: Sets the communication endpoint to receive Events.
      tags:
        - events subscription
      requestBody:
        $ref: '#/components/requestBodies/Hub_FVO'
      responses:
        '201':
          $ref: '#/components/responses/Hub'
        default:
          $ref: '#/components/responses/Error'
  '/hub/{id}':
    get:
      operationId: hubGet
      summary: Retrieve a subscription (hub)
      description: ''
      tags:
        - events subscription
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          $ref: '#/components/responses/Hub'
        default:
          $ref: '#/components/responses/Error'
    delete:
      operationId: hubDelete
      summary: Remove a subscription (hub) to receive Events
      description: ''
      tags:
        - events subscription
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '204':
          description: Deleted
        default:
          $ref: '#/components/responses/Error'
  /listener/customerAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity CustomerAttributeValueChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        CustomerAttributeValueChangeEvent
      operationId: customerAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/CustomerAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/customerCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity CustomerCreateEvent
      description: Example of a client listener for receiving the notification CustomerCreateEvent
      operationId: customerCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/CustomerCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/customerDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity CustomerDeleteEvent
      description: Example of a client listener for receiving the notification CustomerDeleteEvent
      operationId: customerDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/CustomerDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/customerStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity CustomerStateChangeEvent
      description: Example of a client listener for receiving the notification CustomerStateChangeEvent
      operationId: customerStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/CustomerStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
components:
  schemas:
    AccountRef:
      type: object
      description: Account reference. A account may be a party account or a financial account.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AccountRef: '#/components/schemas/AccountRef'
    AccountRef_FVO:
      type: object
      description: Account reference. A account may be a party account or a financial account.
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          AccountRef: '#/components/schemas/AccountRef_FVO'
    AccountRef_MVO:
      type: object
      description: Account reference. A account may be a party account or a financial account.
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          AccountRef: '#/components/schemas/AccountRef_MVO'
    Addressable:
      type: object
      description: Base schema for addressable entities
      properties:
        href:
          type: string
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
    Addressable_FVO:
      type: object
      description: Base schema for addressable entities
    Addressable_MVO:
      type: object
      description: Base schema for addressable entities
    AgreementRef:
      type: object
      description: >-
        Agreement reference. An agreement represents a contract or arrangement, either written or
        verbal and sometimes enforceable by law, such as a service level agreement or a customer
        price agreement. An agreement involves a number of other business entities, such as
        products, services, and resources and/or their specifications.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef'
    AgreementRef_FVO:
      type: object
      description: >-
        Agreement reference. An agreement represents a contract or arrangement, either written or
        verbal and sometimes enforceable by law, such as a service level agreement or a customer
        price agreement. An agreement involves a number of other business entities, such as
        products, services, and resources and/or their specifications.
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef_FVO'
    AgreementRef_MVO:
      type: object
      description: >-
        Agreement reference. An agreement represents a contract or arrangement, either written or
        verbal and sometimes enforceable by law, such as a service level agreement or a customer
        price agreement. An agreement involves a number of other business entities, such as
        products, services, and resources and/or their specifications.
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef_MVO'
    Attachment:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'https://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
    AttachmentRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment'
        - $ref: '#/components/schemas/AttachmentRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment_FVO'
        - $ref: '#/components/schemas/AttachmentRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
          AttachmentRef: '#/components/schemas/AttachmentRef_FVO'
    AttachmentRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment_MVO'
        - $ref: '#/components/schemas/AttachmentRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
    AttachmentRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_FVO'
    AttachmentRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
    Attachment_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'https://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
          required:
            - attachmentType
            - mimeType
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
    Attachment_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'https://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
    BaseEvent:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Base event with common attributes.
          properties:
            event:
              type: object
              description: The event linked to the involved resource object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occurred.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent'
    BooleanArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Boolean(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Boolean(s).
              items:
                type: boolean
                description: Characteristic item boolean value
    BooleanArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Boolean(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Boolean(s).
              items:
                type: boolean
                description: Characteristic item boolean value
          required:
            - value
    BooleanArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Boolean(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Boolean(s).
              items:
                type: boolean
                description: Characteristic item boolean value
    BooleanCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Boolean.
          properties:
            value:
              type: boolean
              description: Value of the characteristic
    BooleanCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Boolean.
          properties:
            value:
              type: boolean
              description: Value of the characteristic
          required:
            - value
    BooleanCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Boolean.
          properties:
            value:
              type: boolean
              description: Value of the characteristic
    BusinessPartner:
      type: object
      description: 'When business partner is the BusinessPartner '
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    BusinessPartner_FVO:
      type: object
      description: 'When business partner is the BusinessPartner '
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    BusinessPartner_MVO:
      type: object
      description: 'When business partner is the BusinessPartner '
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
    Characteristic:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Describes a given characteristic of an object or entity through a name/value pair. This
            is an abstract base class, the actual value is in one of the strongly-typed subclasses :
            StringCharacteristic, ObjectCharacteristic, FloatCharacteristic, BooleanCharacteristic,
            NumberCharacteristic, IntegerCharacteristic, StringArrayCharacteristic,
            ObjectArrayCharacteristic, BooleanArrayCharacteristic, NumberArrayCharacteristic,
            IntegerArrayCharacteristic...
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              description: Collection of characteristic relationships
              items:
                $ref: '#/components/schemas/CharacteristicRelationship'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic'
          FloatCharacteristic: '#/components/schemas/FloatCharacteristic'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic'
          StringCharacteristic: '#/components/schemas/StringCharacteristic'
    CharacteristicRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship'
    CharacteristicRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_FVO'
    CharacteristicRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_MVO'
    Characteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Describes a given characteristic of an object or entity through a name/value pair. This
            is an abstract base class, the actual value is in one of the strongly-typed subclasses :
            StringCharacteristic, ObjectCharacteristic, FloatCharacteristic, BooleanCharacteristic,
            NumberCharacteristic, IntegerCharacteristic, StringArrayCharacteristic,
            ObjectArrayCharacteristic, BooleanArrayCharacteristic, NumberArrayCharacteristic,
            IntegerArrayCharacteristic...
          properties:
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              description: Collection of characteristic relationships
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_FVO'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic_FVO'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic_FVO'
          FloatCharacteristic: '#/components/schemas/FloatCharacteristic_FVO'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic_FVO'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic_FVO'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic_FVO'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic_FVO'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic_FVO'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic_FVO'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic_FVO'
          StringCharacteristic: '#/components/schemas/StringCharacteristic_FVO'
    Characteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: >-
            Describes a given characteristic of an object or entity through a name/value pair. This
            is an abstract base class, the actual value is in one of the strongly-typed subclasses :
            StringCharacteristic, ObjectCharacteristic, FloatCharacteristic, BooleanCharacteristic,
            NumberCharacteristic, IntegerCharacteristic, StringArrayCharacteristic,
            ObjectArrayCharacteristic, BooleanArrayCharacteristic, NumberArrayCharacteristic,
            IntegerArrayCharacteristic...
          properties:
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              description: Collection of characteristic relationships
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_MVO'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic_MVO'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic_MVO'
          FloatCharacteristic: '#/components/schemas/FloatCharacteristic_MVO'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic_MVO'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic_MVO'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic_MVO'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic_MVO'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic_MVO'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic_MVO'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic_MVO'
          StringCharacteristic: '#/components/schemas/StringCharacteristic_MVO'
    Consumer:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    Consumer_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    Consumer_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
    ContactMedium:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Indicates the contact medium that could be used to contact the party. This is an
            abstract base class, the actual value is in one of the strongly-typed subclasses :
            EmailContactMedium, FaxContactMedium, PhoneContactMedium,
            GeographicAddressContactMedium, SocialMediaContactMedium...
          properties:
            id:
              type: string
              description: Identifier for this contact medium.
            preferred:
              type: boolean
              description: 'If true, indicates that is the preferred contact medium'
            contactType:
              type: string
              description: >-
                Type of the contact medium to qualify it like pro email / personal email. This is
                not used to define the contact medium used.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium'
          EmailContactMedium: '#/components/schemas/EmailContactMedium'
          FaxContactMedium: '#/components/schemas/FaxContactMedium'
          GeographicAddressContactMedium: '#/components/schemas/GeographicAddressContactMedium'
          PhoneContactMedium: '#/components/schemas/PhoneContactMedium'
          SocialMediaContactMedium: '#/components/schemas/SocialMediaContactMedium'
    ContactMedium_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Indicates the contact medium that could be used to contact the party. This is an
            abstract base class, the actual value is in one of the strongly-typed subclasses :
            EmailContactMedium, FaxContactMedium, PhoneContactMedium,
            GeographicAddressContactMedium, SocialMediaContactMedium...
          properties:
            preferred:
              type: boolean
              description: 'If true, indicates that is the preferred contact medium'
            contactType:
              type: string
              description: >-
                Type of the contact medium to qualify it like pro email / personal email. This is
                not used to define the contact medium used.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium_FVO'
          EmailContactMedium: '#/components/schemas/EmailContactMedium_FVO'
          FaxContactMedium: '#/components/schemas/FaxContactMedium_FVO'
          GeographicAddressContactMedium: '#/components/schemas/GeographicAddressContactMedium_FVO'
          PhoneContactMedium: '#/components/schemas/PhoneContactMedium_FVO'
          SocialMediaContactMedium: '#/components/schemas/SocialMediaContactMedium_FVO'
    ContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: >-
            Indicates the contact medium that could be used to contact the party. This is an
            abstract base class, the actual value is in one of the strongly-typed subclasses :
            EmailContactMedium, FaxContactMedium, PhoneContactMedium,
            GeographicAddressContactMedium, SocialMediaContactMedium...
          properties:
            preferred:
              type: boolean
              description: 'If true, indicates that is the preferred contact medium'
            contactType:
              type: string
              description: >-
                Type of the contact medium to qualify it like pro email / personal email. This is
                not used to define the contact medium used.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium_MVO'
          EmailContactMedium: '#/components/schemas/EmailContactMedium_MVO'
          FaxContactMedium: '#/components/schemas/FaxContactMedium_MVO'
          GeographicAddressContactMedium: '#/components/schemas/GeographicAddressContactMedium_MVO'
          PhoneContactMedium: '#/components/schemas/PhoneContactMedium_MVO'
          SocialMediaContactMedium: '#/components/schemas/SocialMediaContactMedium_MVO'
    CreditProfile:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Credit profile for the party (containing credit scoring, ...). By default only the
            current credit profile  is retrieved. It can be used as a list to give the party credit
            profiles history, the first one in the list will be the current one.
          properties:
            creditProfileDate:
              type: string
              format: date-time
              description: The date the profile was established
            creditRiskRating:
              type: integer
              description: This is an integer whose value is used to rate the risk
            creditScore:
              type: integer
              description: >-
                A measure of a person or organizations creditworthiness calculated on the basis of a
                combination of factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          CreditProfile: '#/components/schemas/CreditProfile'
    CreditProfile_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Credit profile for the party (containing credit scoring, ...). By default only the
            current credit profile  is retrieved. It can be used as a list to give the party credit
            profiles history, the first one in the list will be the current one.
          properties:
            creditProfileDate:
              type: string
              format: date-time
              description: The date the profile was established
            creditRiskRating:
              type: integer
              description: This is an integer whose value is used to rate the risk
            creditScore:
              type: integer
              description: >-
                A measure of a person or organizations creditworthiness calculated on the basis of a
                combination of factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          CreditProfile: '#/components/schemas/CreditProfile_MVO'
    Customer:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    CustomerAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: CustomerAttributeValueChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/CustomerAttributeValueChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          CustomerAttributeValueChangeEvent: '#/components/schemas/CustomerAttributeValueChangeEvent'
    CustomerAttributeValueChangeEventPayload:
      type: object
      description: The event data structure
      properties:
        customer:
          $ref: '#/components/schemas/Customer'
    CustomerCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: CustomerCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/CustomerCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          CustomerCreateEvent: '#/components/schemas/CustomerCreateEvent'
    CustomerCreateEventPayload:
      type: object
      description: The event data structure
      properties:
        customer:
          $ref: '#/components/schemas/Customer'
    CustomerDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: CustomerDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/CustomerDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          CustomerDeleteEvent: '#/components/schemas/CustomerDeleteEvent'
    CustomerDeleteEventPayload:
      type: object
      description: The event data structure
      properties:
        customer:
          $ref: '#/components/schemas/Customer'
    CustomerStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: CustomerStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/CustomerStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          CustomerStateChangeEvent: '#/components/schemas/CustomerStateChangeEvent'
    CustomerStateChangeEventPayload:
      type: object
      description: The event data structure
      properties:
        customer:
          $ref: '#/components/schemas/Customer'
    Customer_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
      required:
        - engagedParty
    Customer_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
    Disability:
      type: object
      description: Lack or inadequate strength or ability.
      properties:
        disabilityCode:
          type: string
          description: Code of the disability
        disabilityName:
          type: string
          description: Name of the disability
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    EmailContactMedium:
      allOf:
        - $ref: '#/components/schemas/ContactMedium'
        - type: object
          description: >-
            Describes an email that could be used to contact a party (an individual or an
            organization)
          properties:
            emailAddress:
              type: string
              description: Full email address in standard format
    EmailContactMedium_FVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_FVO'
        - type: object
          description: >-
            Describes an email that could be used to contact a party (an individual or an
            organization)
          properties:
            emailAddress:
              type: string
              description: Full email address in standard format
    EmailContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_MVO'
        - type: object
          description: >-
            Describes an email that could be used to contact a party (an individual or an
            organization)
          properties:
            emailAddress:
              type: string
              description: Full email address in standard format
    Entity:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
    EntityRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            id:
              type: string
              description: The identifier of the referred entity.
            href:
              type: string
              description: The URI of the referred entity.
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
          required:
            - id
    EntityRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
    EntityRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
    Entity_MVO:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
    Event:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: event with common attributes.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanation of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/EntityRef'
            reportingSystem:
              $ref: '#/components/schemas/EntityRef'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            analyticCharacteristic:
              type: array
              description: Collection of analytic characteristics
              items:
                $ref: '#/components/schemas/Characteristic'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
    Extensible:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
      properties:
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
      required:
        - '@type'
    Extensible_MVO:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
    ExternalIdentifier:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier'
    ExternalIdentifier_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_FVO'
    ExternalIdentifier_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_MVO'
    FaxContactMedium:
      allOf:
        - $ref: '#/components/schemas/ContactMedium'
        - type: object
          description: Describes a fax that could be used to contact a party (an individual or an organization)
          properties:
            faxNumber:
              type: string
              description: The fax number of the contact
    FaxContactMedium_FVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_FVO'
        - type: object
          description: Describes a fax that could be used to contact a party (an individual or an organization)
          properties:
            faxNumber:
              type: string
              description: The fax number of the contact
    FaxContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_MVO'
        - type: object
          description: Describes a fax that could be used to contact a party (an individual or an organization)
          properties:
            faxNumber:
              type: string
              description: The fax number of the contact
    FloatCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Float.
          properties:
            value:
              type: number
              format: float
              description: Value of the characteristic
    FloatCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Float.
          properties:
            value:
              type: number
              format: float
              description: Value of the characteristic
          required:
            - value
    FloatCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Float.
          properties:
            value:
              type: number
              format: float
              description: Value of the characteristic
    GeographicAddressContactMedium:
      allOf:
        - $ref: '#/components/schemas/ContactMedium'
        - type: object
          description: >-
            Describes a geographical address that could be used to contact a party (an individual or
            an organization)
          properties:
            city:
              type: string
              description: The city
            country:
              type: string
              description: The country
            postCode:
              type: string
              description: Postcode
            stateOrProvince:
              type: string
              description: State or province
            street1:
              type: string
              description: Describes the street
            street2:
              type: string
              description: Complementary street description
            geographicAddress:
              $ref: '#/components/schemas/GeographicAddressRef'
    GeographicAddressContactMedium_FVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_FVO'
        - type: object
          description: >-
            Describes a geographical address that could be used to contact a party (an individual or
            an organization)
          properties:
            city:
              type: string
              description: The city
            country:
              type: string
              description: The country
            postCode:
              type: string
              description: Postcode
            stateOrProvince:
              type: string
              description: State or province
            street1:
              type: string
              description: Describes the street
            street2:
              type: string
              description: Complementary street description
            geographicAddress:
              $ref: '#/components/schemas/GeographicAddressRef_FVO'
    GeographicAddressContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_MVO'
        - type: object
          description: >-
            Describes a geographical address that could be used to contact a party (an individual or
            an organization)
          properties:
            city:
              type: string
              description: The city
            country:
              type: string
              description: The country
            postCode:
              type: string
              description: Postcode
            stateOrProvince:
              type: string
              description: State or province
            street1:
              type: string
              description: Describes the street
            street2:
              type: string
              description: Complementary street description
            geographicAddress:
              $ref: '#/components/schemas/GeographicAddressRef_MVO'
    GeographicAddressRef:
      type: object
      description: Reference to a Geographic Address.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicAddressRef: '#/components/schemas/GeographicAddressRef'
    GeographicAddressRef_FVO:
      type: object
      description: Reference to a Geographic Address.
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicAddressRef: '#/components/schemas/GeographicAddressRef_FVO'
    GeographicAddressRef_MVO:
      type: object
      description: Reference to a Geographic Address.
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicAddressRef: '#/components/schemas/GeographicAddressRef_MVO'
    Individual:
      allOf:
        - $ref: '#/components/schemas/Party'
        - type: object
          description: >-
            Individual represents a single human being (a man, woman or child). The individual can
            be a customer, an employee or any other person that the organization needs to store
            information about.
          properties:
            gender:
              type: string
              description: Gender
            placeOfBirth:
              type: string
              description: Reference to the place where the individual was born
            countryOfBirth:
              type: string
              description: Country where the individual was born
            nationality:
              type: string
              description: Nationality
            maritalStatus:
              type: string
              description: 'Marital status (married, divorced, widow ...)'
            birthDate:
              type: string
              format: date-time
              description: Birth date
            deathDate:
              type: string
              format: date-time
              description: Date of death
            title:
              type: string
              description: 'Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...'
            aristocraticTitle:
              type: string
              description: 'e.g. Baron, Graf, Earl'
            generation:
              type: string
              description: 'e.g.. Sr, Jr, III (the third)'
            preferredGivenName:
              type: string
              description: >-
                Contains the chosen name by which the individual prefers to be addressed. Note: This
                name may be a name other than a given name, such as a nickname
            familyNamePrefix:
              type: string
              description: Family name prefix
            legalName:
              type: string
              description: Legal name or birth name (name one has for official purposes)
            middleName:
              type: string
              description: Middles name or initial
            name:
              type: string
              description: >-
                Full name flatten (first, middle, and last names) - this is the name that is
                expected to be presented in reference data types such as PartyRef, RelatedParty,
                etc. that refer to Individual
            formattedName:
              type: string
              description: >-
                A fully formatted name in one string with all of its pieces in their proper place
                and all of the necessary punctuation. Useful for specific contexts (Chinese,
                Japanese, Korean)
            location:
              type: string
              description: >-
                Temporary current location of the individual (may be used if the individual has
                approved its sharing)
            status:
              $ref: '#/components/schemas/IndividualStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameIndividual'
              description: List of other names by which this individual is known
            individualIdentification:
              type: array
              items:
                $ref: '#/components/schemas/IndividualIdentification'
              description: >-
                List of official identifications issued to the individual, such as passport, driving
                licence, social security number
            disability:
              type: array
              items:
                $ref: '#/components/schemas/Disability'
              description: List of disabilities suffered by the individual
            languageAbility:
              type: array
              items:
                $ref: '#/components/schemas/LanguageAbility'
              description: List of national languages known by the individual
            skill:
              type: array
              items:
                $ref: '#/components/schemas/Skill'
              description: List of skills exhibited by the individual
            familyName:
              type: string
              description: >-
                Contains the non-chosen or inherited name. Also known as last name in the Western
                context
            givenName:
              type: string
              description: First name of the individual
    IndividualIdentification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Represents our registration of information used as proof of identity by an individual
            (passport, national identity card, drivers license, social security number, birth
            certificate)
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: 'Authority which has issued the identifier, such as: social security, town hall'
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Identification type (passport, national identity card, drivers license, social
                security number, birth certificate)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification'
    IndividualIdentification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Represents our registration of information used as proof of identity by an individual
            (passport, national identity card, drivers license, social security number, birth
            certificate)
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: 'Authority which has issued the identifier, such as: social security, town hall'
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Identification type (passport, national identity card, drivers license, social
                security number, birth certificate)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification_FVO'
    IndividualIdentification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: >-
            Represents our registration of information used as proof of identity by an individual
            (passport, national identity card, drivers license, social security number, birth
            certificate)
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: 'Authority which has issued the identifier, such as: social security, town hall'
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Identification type (passport, national identity card, drivers license, social
                security number, birth certificate)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification_MVO'
    IndividualStateType:
      enum:
        - initialized
        - validated
        - deceased
      type: string
      description: Valid values for the lifecycle state of the individual
    Individual_FVO:
      allOf:
        - $ref: '#/components/schemas/Party_FVO'
        - type: object
          description: >-
            Individual represents a single human being (a man, woman or child). The individual can
            be a customer, an employee or any other person that the organization needs to store
            information about.
          properties:
            gender:
              type: string
              description: Gender
            placeOfBirth:
              type: string
              description: Reference to the place where the individual was born
            countryOfBirth:
              type: string
              description: Country where the individual was born
            nationality:
              type: string
              description: Nationality
            maritalStatus:
              type: string
              description: 'Marital status (married, divorced, widow ...)'
            birthDate:
              type: string
              format: date-time
              description: Birth date
            deathDate:
              type: string
              format: date-time
              description: Date of death
            title:
              type: string
              description: 'Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...'
            aristocraticTitle:
              type: string
              description: 'e.g. Baron, Graf, Earl'
            generation:
              type: string
              description: 'e.g.. Sr, Jr, III (the third)'
            preferredGivenName:
              type: string
              description: >-
                Contains the chosen name by which the individual prefers to be addressed. Note: This
                name may be a name other than a given name, such as a nickname
            familyNamePrefix:
              type: string
              description: Family name prefix
            legalName:
              type: string
              description: Legal name or birth name (name one has for official purposes)
            middleName:
              type: string
              description: Middles name or initial
            name:
              type: string
              description: >-
                Full name flatten (first, middle, and last names) - this is the name that is
                expected to be presented in reference data types such as PartyRef, RelatedParty,
                etc. that refer to Individual
            formattedName:
              type: string
              description: >-
                A fully formatted name in one string with all of its pieces in their proper place
                and all of the necessary punctuation. Useful for specific contexts (Chinese,
                Japanese, Korean)
            location:
              type: string
              description: >-
                Temporary current location of the individual (may be used if the individual has
                approved its sharing)
            status:
              $ref: '#/components/schemas/IndividualStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameIndividual'
              description: List of other names by which this individual is known
            individualIdentification:
              type: array
              items:
                $ref: '#/components/schemas/IndividualIdentification_FVO'
              description: >-
                List of official identifications issued to the individual, such as passport, driving
                licence, social security number
            disability:
              type: array
              items:
                $ref: '#/components/schemas/Disability'
              description: List of disabilities suffered by the individual
            languageAbility:
              type: array
              items:
                $ref: '#/components/schemas/LanguageAbility'
              description: List of national languages known by the individual
            skill:
              type: array
              items:
                $ref: '#/components/schemas/Skill'
              description: List of skills exhibited by the individual
            familyName:
              type: string
              description: >-
                Contains the non-chosen or inherited name. Also known as last name in the Western
                context
            givenName:
              type: string
              description: First name of the individual
    Individual_MVO:
      allOf:
        - $ref: '#/components/schemas/Party_MVO'
        - type: object
          description: >-
            Individual represents a single human being (a man, woman or child). The individual can
            be a customer, an employee or any other person that the organization needs to store
            information about.
          properties:
            gender:
              type: string
              description: Gender
            placeOfBirth:
              type: string
              description: Reference to the place where the individual was born
            countryOfBirth:
              type: string
              description: Country where the individual was born
            nationality:
              type: string
              description: Nationality
            maritalStatus:
              type: string
              description: 'Marital status (married, divorced, widow ...)'
            birthDate:
              type: string
              format: date-time
              description: Birth date
            deathDate:
              type: string
              format: date-time
              description: Date of death
            title:
              type: string
              description: 'Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...'
            aristocraticTitle:
              type: string
              description: 'e.g. Baron, Graf, Earl'
            generation:
              type: string
              description: 'e.g.. Sr, Jr, III (the third)'
            preferredGivenName:
              type: string
              description: >-
                Contains the chosen name by which the individual prefers to be addressed. Note: This
                name may be a name other than a given name, such as a nickname
            familyNamePrefix:
              type: string
              description: Family name prefix
            legalName:
              type: string
              description: Legal name or birth name (name one has for official purposes)
            middleName:
              type: string
              description: Middles name or initial
            name:
              type: string
              description: >-
                Full name flatten (first, middle, and last names) - this is the name that is
                expected to be presented in reference data types such as PartyRef, RelatedParty,
                etc. that refer to Individual
            formattedName:
              type: string
              description: >-
                A fully formatted name in one string with all of its pieces in their proper place
                and all of the necessary punctuation. Useful for specific contexts (Chinese,
                Japanese, Korean)
            location:
              type: string
              description: >-
                Temporary current location of the individual (may be used if the individual has
                approved its sharing)
            status:
              $ref: '#/components/schemas/IndividualStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameIndividual'
              description: List of other names by which this individual is known
            individualIdentification:
              type: array
              items:
                $ref: '#/components/schemas/IndividualIdentification_MVO'
              description: >-
                List of official identifications issued to the individual, such as passport, driving
                licence, social security number
            disability:
              type: array
              items:
                $ref: '#/components/schemas/Disability'
              description: List of disabilities suffered by the individual
            languageAbility:
              type: array
              items:
                $ref: '#/components/schemas/LanguageAbility'
              description: List of national languages known by the individual
            skill:
              type: array
              items:
                $ref: '#/components/schemas/Skill'
              description: List of skills exhibited by the individual
            familyName:
              type: string
              description: >-
                Contains the non-chosen or inherited name. Also known as last name in the Western
                context
            givenName:
              type: string
              description: First name of the individual
    IntegerArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Integer(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Integer(s).
              items:
                type: integer
                description: Characteristic value
    IntegerArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Integer(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Integer(s).
              items:
                type: integer
                description: Characteristic value
          required:
            - value
    IntegerArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Integer(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Integer(s).
              items:
                type: integer
                description: Characteristic value
    IntegerCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an Integer.
          properties:
            value:
              type: integer
              description: Value of the characteristic
    IntegerCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an Integer.
          properties:
            value:
              type: integer
              description: Value of the characteristic
          required:
            - value
    IntegerCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an Integer.
          properties:
            value:
              type: integer
              description: Value of the characteristic
    LanguageAbility:
      type: object
      description: Some languages and the qualification of the speaking and writing skills for each one
      properties:
        languageCode:
          type: string
          description: Language code
        languageName:
          type: string
          description: Language name
        isFavouriteLanguage:
          type: boolean
          description: A flag indicating if this is the preferred language
        listeningProficiency:
          type: string
          description: Listening proficiency
        readingProficiency:
          type: string
          description: Reading proficiency
        speakingProficiency:
          type: string
          description: Speaking proficiency
        writingProficiency:
          type: string
          description: Writing proficiency
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    MediumCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Describes the contact medium characteristics that could be used to contact a party (an
            individual or an organization)
          properties:
            city:
              type: string
              description: The city
            contactType:
              type: string
              description: The type of contact
            country:
              type: string
              description: The country
            emailAddress:
              type: string
              description: The e-mail address of the contact
            faxNumber:
              type: string
              description: The fax number of the contact
            phoneNumber:
              type: string
              description: The telephone number of the contact
            postCode:
              type: string
              description: Postcode
            socialNetworkId:
              type: string
              description: Identifier as a member of a social network
            stateOrProvince:
              type: string
              description: State or province
            street1:
              type: string
              description: Describes the street
            street2:
              type: string
              description: Complementary street description
      discriminator:
        propertyName: '@type'
        mapping:
          MediumCharacteristic: '#/components/schemas/MediumCharacteristic'
    MediumCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Describes the contact medium characteristics that could be used to contact a party (an
            individual or an organization)
          properties:
            city:
              type: string
              description: The city
            contactType:
              type: string
              description: The type of contact
            country:
              type: string
              description: The country
            emailAddress:
              type: string
              description: The e-mail address of the contact
            faxNumber:
              type: string
              description: The fax number of the contact
            phoneNumber:
              type: string
              description: The telephone number of the contact
            postCode:
              type: string
              description: Postcode
            socialNetworkId:
              type: string
              description: Identifier as a member of a social network
            stateOrProvince:
              type: string
              description: State or province
            street1:
              type: string
              description: Describes the street
            street2:
              type: string
              description: Complementary street description
      discriminator:
        propertyName: '@type'
        mapping:
          MediumCharacteristic: '#/components/schemas/MediumCharacteristic_FVO'
    MediumCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: >-
            Describes the contact medium characteristics that could be used to contact a party (an
            individual or an organization)
          properties:
            city:
              type: string
              description: The city
            contactType:
              type: string
              description: The type of contact
            country:
              type: string
              description: The country
            emailAddress:
              type: string
              description: The e-mail address of the contact
            faxNumber:
              type: string
              description: The fax number of the contact
            phoneNumber:
              type: string
              description: The telephone number of the contact
            postCode:
              type: string
              description: Postcode
            socialNetworkId:
              type: string
              description: Identifier as a member of a social network
            stateOrProvince:
              type: string
              description: State or province
            street1:
              type: string
              description: Describes the street
            street2:
              type: string
              description: Complementary street description
      discriminator:
        propertyName: '@type'
        mapping:
          MediumCharacteristic: '#/components/schemas/MediumCharacteristic_MVO'
    NumberArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Number(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Number(s).
              items:
                type: number
                description: Characteristic value
    NumberArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Number(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Number(s).
              items:
                type: number
                description: Characteristic value
          required:
            - value
    NumberArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Number(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Number(s).
              items:
                type: number
                description: Characteristic value
    NumberCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Number.
          properties:
            value:
              type: number
              description: Value of the characteristic
    NumberCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Number.
          properties:
            value:
              type: number
              description: Value of the characteristic
          required:
            - value
    NumberCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Number.
          properties:
            value:
              type: number
              description: Value of the characteristic
    ObjectArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Object(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Object(s).
              items:
                type: object
                description: Characteristic value
    ObjectArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Object(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Object(s).
              items:
                type: object
                description: Characteristic value
          required:
            - value
    ObjectArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Object(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Object(s).
              items:
                type: object
                description: Characteristic value
    ObjectCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an object.
          properties:
            value:
              type: object
              description: Value of the characteristic
    ObjectCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an object.
          properties:
            value:
              type: object
              description: Value of the characteristic
          required:
            - value
    ObjectCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an object.
          properties:
            value:
              type: object
              description: Value of the characteristic
    Organization:
      allOf:
        - $ref: '#/components/schemas/Party'
        - type: object
          description: >-
            Organization represents a group of people identified by a name, it can be a company, a
            club, an association, etc.
          properties:
            isHeadOffice:
              type: boolean
              description: If value is true, the organization is the head office
            isLegalEntity:
              type: boolean
              description: If value is true, the organization is a legal entity
            name:
              type: string
              description: >-
                Organization name (department name for example) - this is the name that is expected
                to be presented in reference data types such as PartyRef, RelatedParty, etc. that
                refer to Organization
            nameType:
              type: string
              description: Type of name (for example, official name, alias,...)
            organizationType:
              type: string
              description: Type of organization (company, association,...)
            tradingName:
              type: string
              description: Name that the organization (unit) trades under
            status:
              $ref: '#/components/schemas/OrganizationStateType'
            organizationIdentification:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationIdentification'
              description: List of organization identifications
            organizationChildRelationship:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationChildRelationship'
              description: List of child organizations
            organizationParentRelationship:
              $ref: '#/components/schemas/OrganizationParentRelationship'
    OrganizationChildRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An organization child relationship allows to manage the position of an organization in
            a hierarchy of organizations.
          properties:
            relationshipType:
              type: string
              description: Type of the relationship
            organization:
              $ref: '#/components/schemas/OrganizationRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationChildRelationship: '#/components/schemas/OrganizationChildRelationship'
    OrganizationChildRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An organization child relationship allows to manage the position of an organization in
            a hierarchy of organizations.
          properties:
            relationshipType:
              type: string
              description: Type of the relationship
            organization:
              $ref: '#/components/schemas/OrganizationRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationChildRelationship: '#/components/schemas/OrganizationChildRelationship_FVO'
    OrganizationChildRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: >-
            An organization child relationship allows to manage the position of an organization in
            a hierarchy of organizations.
          properties:
            relationshipType:
              type: string
              description: Type of the relationship
            organization:
              $ref: '#/components/schemas/OrganizationRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationChildRelationship: '#/components/schemas/OrganizationChildRelationship_MVO'
    OrganizationIdentification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Represents our registration of information used as proof of identity by an organization
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: 'Authority which has issued the identifier, such as: social security, town hall'
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: Identification type (passport, national identity card, drivers license...)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification'
    OrganizationIdentification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Represents our registration of information used as proof of identity by an organization
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: 'Authority which has issued the identifier, such as: social security, town hall'
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: Identification type (passport, national identity card, drivers license...)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification_FVO'
    OrganizationIdentification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: Represents our registration of information used as proof of identity by an organization
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: 'Authority which has issued the identifier, such as: social security, town hall'
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: Identification type (passport, national identity card, drivers license...)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification_MVO'
    OrganizationParentRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An organization parent relationship allows to manage the position of an organization in
            a hierarchy of organizations.
          properties:
            relationshipType:
              type: string
              description: Type of the relationship
            organization:
              $ref: '#/components/schemas/OrganizationRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationParentRelationship: '#/components/schemas/OrganizationParentRelationship'
    OrganizationParentRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An organization parent relationship allows to manage the position of an organization in
            a hierarchy of organizations.
          properties:
            relationshipType:
              type: string
              description: Type of the relationship
            organization:
              $ref: '#/components/schemas/OrganizationRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationParentRelationship: '#/components/schemas/OrganizationParentRelationship_FVO'
    OrganizationParentRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: >-
            An organization parent relationship allows to manage the position of an organization in
            a hierarchy of organizations.
          properties:
            relationshipType:
              type: string
              description: Type of the relationship
            organization:
              $ref: '#/components/schemas/OrganizationRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationParentRelationship: '#/components/schemas/OrganizationParentRelationship_MVO'
    OrganizationRef:
      type: object
      description: Organization reference. An organization represents a group of people identified by a name.
      allOf:
        - $ref: '#/components/schemas/PartyRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationRef: '#/components/schemas/OrganizationRef'
    OrganizationRef_FVO:
      type: object
      description: Organization reference. An organization represents a group of people identified by a name.
      allOf:
        - $ref: '#/components/schemas/PartyRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationRef: '#/components/schemas/OrganizationRef_FVO'
    OrganizationRef_MVO:
      type: object
      description: Organization reference. An organization represents a group of people identified by a name.
      allOf:
        - $ref: '#/components/schemas/PartyRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationRef: '#/components/schemas/OrganizationRef_MVO'
    OrganizationStateType:
      enum:
        - initialized
        - validated
        - closed
      type: string
      description: Valid values for the lifecycle state of the organization
    Organization_FVO:
      allOf:
        - $ref: '#/components/schemas/Party_FVO'
        - type: object
          description: >-
            Organization represents a group of people identified by a name, it can be a company, a
            club, an association, etc.
          properties:
            isHeadOffice:
              type: boolean
              description: If value is true, the organization is the head office
            isLegalEntity:
              type: boolean
              description: If value is true, the organization is a legal entity
            name:
              type: string
              description: >-
                Organization name (department name for example) - this is the name that is expected
                to be presented in reference data types such as PartyRef, RelatedParty, etc. that
                refer to Organization
            nameType:
              type: string
              description: Type of name (for example, official name, alias,...)
            organizationType:
              type: string
              description: Type of organization (company, association,...)
            tradingName:
              type: string
              description: Name that the organization (unit) trades under
            status:
              $ref: '#/components/schemas/OrganizationStateType'
            organizationIdentification:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationIdentification_FVO'
              description: List of organization identifications
            organizationChildRelationship:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationChildRelationship_FVO'
              description: List of child organizations
            organizationParentRelationship:
              $ref: '#/components/schemas/OrganizationParentRelationship_FVO'
    Organization_MVO:
      allOf:
        - $ref: '#/components/schemas/Party_MVO'
        - type: object
          description: >-
            Organization represents a group of people identified by a name, it can be a company, a
            club, an association, etc.
          properties:
            isHeadOffice:
              type: boolean
              description: If value is true, the organization is the head office
            isLegalEntity:
              type: boolean
              description: If value is true, the organization is a legal entity
            name:
              type: string
              description: >-
                Organization name (department name for example) - this is the name that is expected
                to be presented in reference data types such as PartyRef, RelatedParty, etc. that
                refer to Organization
            nameType:
              type: string
              description: Type of name (for example, official name, alias,...)
            organizationType:
              type: string
              description: Type of organization (company, association,...)
            tradingName:
              type: string
              description: Name that the organization (unit) trades under
            status:
              $ref: '#/components/schemas/OrganizationStateType'
            organizationIdentification:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationIdentification_MVO'
              description: List of organization identifications
            organizationChildRelationship:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationChildRelationship_MVO'
              description: List of child organizations
            organizationParentRelationship:
              $ref: '#/components/schemas/OrganizationParentRelationship_MVO'
    OtherNameIndividual:
      type: object
      description: Other name of an individual
      properties:
        aristocraticTitle:
          type: string
          description: 'e.g. Baron, Graf, Earl'
        familyNamePrefix:
          type: string
          description: Family name prefix
        generation:
          type: string
          description: 'e.g.. Sr, Jr, III (the third)'
        legalName:
          type: string
          description: Legal name or birth name (name one has for official purposes)
        middleName:
          type: string
          description: Middles name or initial
        nameType:
          type: string
          description: Type of other name (e.g. alias, artist name)
        preferredGivenName:
          type: string
          description: >-
            Contains the chosen name by which the individual prefers to be addressed. Note: This
            name may be a name other than a given name, such as a nickname
        title:
          type: string
          description: 'Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        familyName:
          type: string
          description: >-
            Contains the non-chosen or inherited name. Also known as last name in the Western
            context
        givenName:
          type: string
          description: First name of the individual
        fullName:
          type: string
          description: Full name flatten (first, middle, and last names)
        formattedName:
          type: string
          description: >-
            A fully formatted name in one string with all of its pieces in their proper place and
            all of the necessary punctuation
    OtherNameOrganization:
      type: object
      description: Other name of an organization
      properties:
        name:
          type: string
          description: Organization name (department name for example)
        nameType:
          type: string
          description: Type of name (for example, official name, alias,...)
        tradingName:
          type: string
          description: Name that the organization (unit) trades under
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    Party:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Base Party schema. A party is an individual or an organization that has any kind of
            relationship with the enterprise. Party is an abstract concept that is defined as a
            convenience through which the relationship between an individual and an organization
            can be modeled.
          properties:
            partyCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
              description: Describes the characteristic of a party.
            externalReference:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
              description: List of `ExternalIdentifier`
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium'
              description: List of `ContactMedium`
            creditProfile:
              type: array
              items:
                $ref: '#/components/schemas/CreditProfile'
              description: List of `CreditProfile`
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
              description: List of `RelatedParty`
      discriminator:
        propertyName: '@type'
        mapping:
          Party: '#/components/schemas/Party'
          Individual: '#/components/schemas/Individual'
          Organization: '#/components/schemas/Organization'
    PartyAccountRef:
      type: object
      description: Party account reference. A party account is an arrangement that a party has with an enterprise that provides products and services to the party.
      allOf:
        - $ref: '#/components/schemas/AccountRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyAccountRef: '#/components/schemas/PartyAccountRef'
    PartyAccountRef_FVO:
      type: object
      description: Party account reference. A party account is an arrangement that a party has with an enterprise that provides products and services to the party.
      allOf:
        - $ref: '#/components/schemas/AccountRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyAccountRef: '#/components/schemas/PartyAccountRef_FVO'
    PartyAccountRef_MVO:
      type: object
      description: Party account reference. A party account is an arrangement that a party has with an enterprise that provides products and services to the party.
      allOf:
        - $ref: '#/components/schemas/AccountRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyAccountRef: '#/components/schemas/PartyAccountRef_MVO'
    PartyRef:
      type: object
      description: Party reference. A party represents an organization or an individual.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
          IndividualRef: '#/components/schemas/IndividualRef'
          OrganizationRef: '#/components/schemas/OrganizationRef'
    PartyRef_FVO:
      type: object
      description: Party reference. A party represents an organization or an individual.
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_FVO'
          IndividualRef: '#/components/schemas/IndividualRef_FVO'
          OrganizationRef: '#/components/schemas/OrganizationRef_FVO'
    PartyRef_MVO:
      type: object
      description: Party reference. A party represents an organization or an individual.
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
          IndividualRef: '#/components/schemas/IndividualRef_MVO'
          OrganizationRef: '#/components/schemas/OrganizationRef_MVO'
    PartyRole:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            A party role represents the part that a party plays in a given context. A party role is
            played by a party (an individual or an organization). This is an abstract modeling
            concept that is defined as a convenience to illustrate the relationship between a party
            and the respective role(s).
          properties:
            name:
              type: string
              description: The name of the party role
            status:
              type: string
              description: The status of the party role
            statusReason:
              type: string
              description: A string providing an explanation on the value of the status
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            account:
              type: array
              items:
                $ref: '#/components/schemas/AccountRef'
              description: List of accounts of the party role
            paymentMethod:
              type: array
              items:
                $ref: '#/components/schemas/PaymentMethodRef'
              description: List of payment methods of the party role
            contactPoint:
              type: array
              items:
                $ref: '#/components/schemas/ContactPoint'
              description: List of contact points of the party role
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
              description: List of related parties
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
              description: List of characteristics of the party role
            engagedParty:
              $ref: '#/components/schemas/PartyRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRole: '#/components/schemas/PartyRole'
          BusinessPartner: '#/components/schemas/BusinessPartner'
          Consumer: '#/components/schemas/Consumer'
          Customer: '#/components/schemas/Customer'
          Supplier: '#/components/schemas/Supplier'
    PartyRoleRef:
      type: object
      description: A party role reference. A party role represents the part that a party plays in a given context.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRoleRef_FVO:
      type: object
      description: A party role reference. A party role represents the part that a party plays in a given context.
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
    PartyRoleRef_MVO:
      type: object
      description: A party role reference. A party role represents the part that a party plays in a given context.
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
    PartyRole_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            A party role represents the part that a party plays in a given context. A party role is
            played by a party (an individual or an organization). This is an abstract modeling
            concept that is defined as a convenience to illustrate the relationship between a party
            and the respective role(s).
          properties:
            name:
              type: string
              description: The name of the party role
            status:
              type: string
              description: The status of the party role
            statusReason:
              type: string
              description: A string providing an explanation on the value of the status
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            account:
              type: array
              items:
                $ref: '#/components/schemas/AccountRef_FVO'
              description: List of accounts of the party role
            paymentMethod:
              type: array
              items:
                $ref: '#/components/schemas/PaymentMethodRef_FVO'
              description: List of payment methods of the party role
            contactPoint:
              type: array
              items:
                $ref: '#/components/schemas/ContactPoint'
              description: List of contact points of the party role
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
              description: List of related parties
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
              description: List of characteristics of the party role
            engagedParty:
              $ref: '#/components/schemas/PartyRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRole: '#/components/schemas/PartyRole_FVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_FVO'
          Consumer: '#/components/schemas/Consumer_FVO'
          Customer: '#/components/schemas/Customer_FVO'
          Supplier: '#/components/schemas/Supplier_FVO'
    PartyRole_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            A party role represents the part that a party plays in a given context. A party role is
            played by a party (an individual or an organization). This is an abstract modeling
            concept that is defined as a convenience to illustrate the relationship between a party
            and the respective role(s).
          properties:
            name:
              type: string
              description: The name of the party role
            status:
              type: string
              description: The status of the party role
            statusReason:
              type: string
              description: A string providing an explanation on the value of the status
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            account:
              type: array
              items:
                $ref: '#/components/schemas/AccountRef_MVO'
              description: List of accounts of the party role
            paymentMethod:
              type: array
              items:
                $ref: '#/components/schemas/PaymentMethodRef_MVO'
              description: List of payment methods of the party role
            contactPoint:
              type: array
              items:
                $ref: '#/components/schemas/ContactPoint'
              description: List of contact points of the party role
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
              description: List of related parties
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
              description: List of characteristics of the party role
            engagedParty:
              $ref: '#/components/schemas/PartyRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRole: '#/components/schemas/PartyRole_MVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_MVO'
          Consumer: '#/components/schemas/Consumer_MVO'
          Customer: '#/components/schemas/Customer_MVO'
          Supplier: '#/components/schemas/Supplier_MVO'
    Party_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Base Party schema. A party is an individual or an organization that has any kind of
            relationship with the enterprise. Party is an abstract concept that is defined as a
            convenience through which the relationship between an individual and an organization
            can be modeled.
          properties:
            partyCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
              description: Describes the characteristic of a party.
            externalReference:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
              description: List of `ExternalIdentifier`
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium_FVO'
              description: List of `ContactMedium`
            creditProfile:
              type: array
              items:
                $ref: '#/components/schemas/CreditProfile'
              description: List of `CreditProfile`
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
              description: List of `RelatedParty`
      discriminator:
        propertyName: '@type'
        mapping:
          Party: '#/components/schemas/Party_FVO'
          Individual: '#/components/schemas/Individual_FVO'
          Organization: '#/components/schemas/Organization_FVO'
    Party_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            Base Party schema. A party is an individual or an organization that has any kind of
            relationship with the enterprise. Party is an abstract concept that is defined as a
            convenience through which the relationship between an individual and an organization
            can be modeled.
          properties:
            partyCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
              description: Describes the characteristic of a party.
            externalReference:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
              description: List of `ExternalIdentifier`
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium_MVO'
              description: List of `ContactMedium`
            creditProfile:
              type: array
              items:
                $ref: '#/components/schemas/CreditProfile_MVO'
              description: List of `CreditProfile`
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
              description: List of `RelatedParty`
      discriminator:
        propertyName: '@type'
        mapping:
          Party: '#/components/schemas/Party_MVO'
          Individual: '#/components/schemas/Individual_MVO'
          Organization: '#/components/schemas/Organization_MVO'
    PaymentMethodRef:
      type: object
      description: PaymentMethod reference. A payment method represents a mean of payment provided by a party in order to perform a payment.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef'
    PaymentMethodRef_FVO:
      type: object
      description: PaymentMethod reference. A payment method represents a mean of payment provided by a party in order to perform a payment.
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef_FVO'
    PaymentMethodRef_MVO:
      type: object
      description: PaymentMethod reference. A payment method represents a mean of payment provided by a party in order to perform a payment.
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef_MVO'
    PhoneContactMedium:
      allOf:
        - $ref: '#/components/schemas/ContactMedium'
        - type: object
          description: >-
            Describes a phone number that could be used to contact a party (an individual or an
            organization)
          properties:
            number:
              type: string
              description: Phone number
    PhoneContactMedium_FVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_FVO'
        - type: object
          description: >-
            Describes a phone number that could be used to contact a party (an individual or an
            organization)
          properties:
            number:
              type: string
              description: Phone number
    PhoneContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_MVO'
        - type: object
          description: >-
            Describes a phone number that could be used to contact a party (an individual or an
            organization)
          properties:
            number:
              type: string
              description: Phone number
    Quantity:
      type: object
      description: An amount in a given unit
      properties:
        amount:
          type: number
          format: float
          description: Numeric value
        units:
          type: string
          description: Unit
    RelatedPartyRef:
      type: object
      description: Related Party reference. A related party defines party or party role linked to a specific entity.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRef: '#/components/schemas/RelatedPartyRef'
    RelatedPartyRefOrPartyRoleRef:
      type: object
      description: The polymorphic attributes @type, @schemaLocation & @referredType are related to the PartyRole and RelatedPartyRef models and not the RelatedPartyRefOrPartyRoleRef class itself
      oneOf:
        - $ref: '#/components/schemas/PartyRoleRef'
        - $ref: '#/components/schemas/RelatedPartyRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
          RelatedPartyRef: '#/components/schemas/RelatedPartyRef'
    RelatedPartyRefOrPartyRoleRef_FVO:
      type: object
      description: The polymorphic attributes @type, @schemaLocation & @referredType are related to the PartyRole and RelatedPartyRef models and not the RelatedPartyRefOrPartyRoleRef class itself
      oneOf:
        - $ref: '#/components/schemas/PartyRoleRef_FVO'
        - $ref: '#/components/schemas/RelatedPartyRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
          RelatedPartyRef: '#/components/schemas/RelatedPartyRef'
    RelatedPartyRefOrPartyRoleRef_MVO:
      type: object
      description: The polymorphic attributes @type, @schemaLocation & @referredType are related to the PartyRole and RelatedPartyRef models and not the RelatedPartyRefOrPartyRoleRef class itself
      oneOf:
        - $ref: '#/components/schemas/PartyRoleRef_MVO'
        - $ref: '#/components/schemas/RelatedPartyRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
          RelatedPartyRef: '#/components/schemas/RelatedPartyRef'
    Skill:
      type: object
      description: Some skills of an individual
      properties:
        comment:
          type: string
          description: A free text comment
        evaluatedLevel:
          type: string
          description: The level of the skill evaluated for this individual
        skillCode:
          type: string
          description: Code of the skill
        skillName:
          type: string
          description: Name of the skill
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    SocialMediaContactMedium:
      allOf:
        - $ref: '#/components/schemas/ContactMedium'
        - type: object
          description: >-
            Describes a social media account that could be used to contact a party (an individual or
            an organization)
          properties:
            socialNetworkId:
              type: string
              description: Identifier as a member of a social network
    SocialMediaContactMedium_FVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_FVO'
        - type: object
          description: >-
            Describes a social media account that could be used to contact a party (an individual or
            an organization)
          properties:
            socialNetworkId:
              type: string
              description: Identifier as a member of a social network
    SocialMediaContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_MVO'
        - type: object
          description: >-
            Describes a social media account that could be used to contact a party (an individual or
            an organization)
          properties:
            socialNetworkId:
              type: string
              description: Identifier as a member of a social network
    StringArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of String(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of String(s).
              items:
                type: string
                description: Characteristic value
    StringArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of String(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of String(s).
              items:
                type: string
                description: Characteristic value
          required:
            - value
    StringArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of String(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of String(s).
              items:
                type: string
                description: Characteristic value
    StringCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a String.
          properties:
            value:
              type: string
              description: Value of the characteristic
    StringCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a String.
          properties:
            value:
              type: string
              description: Value of the characteristic
          required:
            - value
    StringCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a String.
          properties:
            value:
              type: string
              description: Value of the characteristic
    Supplier:
      type: object
      description: When the party is the supplier
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    Supplier_FVO:
      type: object
      description: When the party is the supplier
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    Supplier_MVO:
      type: object
      description: When the party is the supplier
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
    TimePeriod:
      type: object
      description: A period of time, either as a deadline (endDateTime only) a startDateTime only, or both
      properties:
        endDateTime:
          type: string
          format: date-time
          description: End date and time of the period
        startDateTime:
          type: string
          format: date-time
          description: Start date and time of the period
    Hub:
      type: object
      description: Hub resource
      properties:
        id:
          type: string
          description: Id of the hub
        callback:
          type: string
          description: Callback URL for the hub
        query:
          type: string
          description: Query string for the hub
    Hub_FVO:
      type: object
      description: Hub resource
      properties:
        callback:
          type: string
          description: Callback URL for the hub
        query:
          type: string
          description: Query string for the hub
      required:
        - callback
    Error:
      type: object
      properties:
        code:
          type: string
        reason:
          type: string
        message:
          type: string
        status:
          type: string
        referenceError:
          type: string
        '@baseType':
          type: string
        '@schemaLocation':
          type: string
        '@type':
          type: string
  requestBodies:
    Customer_FVO:
      description: The Customer to be created
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customer_FVO'
    Customer_MVO:
      description: The Customer to be updated
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customer_MVO'
    Hub_FVO:
      description: The Hub to be created
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub_FVO'
    CustomerAttributeValueChangeEvent:
      description: CustomerAttributeValueChangeEvent
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerAttributeValueChangeEvent'
    CustomerCreateEvent:
      description: CustomerCreateEvent
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerCreateEvent'
    CustomerDeleteEvent:
      description: CustomerDeleteEvent
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerDeleteEvent'
    CustomerStateChangeEvent:
      description: CustomerStateChangeEvent
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerStateChangeEvent'
  responses:
    '200CustomerArray':
      description: Success
      headers:
        Content-Range:
          description: >-
            For paginated GET list commands, the range of results returned in the response. From
            [https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16].
          schema:
            type: string
        X-Result-Count:
          description: The number of resources retrieved in the response
          schema:
            type: integer
        X-Total-Count:
          description: The total number of resources that could be retrieved
          schema:
            type: integer
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Customer'
    '200Customer_Get':
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customer'
    '200Customer_Patch':
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customer'
    '201Customer':
      description: Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customer'
    '202':
      description: Accepted
    '204':
      description: No Content
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '405':
      description: Method Not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '501':
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '503':
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Hub:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub'
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  parameters:
    Id:
      name: id
      in: path
      description: Identifier of the Resource
      required: true
      style: simple
      explode: false
      schema:
        type: string
    Fields:
      name: fields
      in: query
      description: >-
        Comma-separated list of fields to return (e.g. `id,name,value`). If not specified, all fields
        are returned.
      required: false
      style: form
      explode: true
      schema:
        type: string
    Offset:
      name: offset
      in: query
      description: Requested index for start of resources to be provided in response
      required: false
      style: form
      explode: true
      schema:
        type: integer
    Limit:
      name: limit
      in: query
      description: Requested number of resources to be provided in response
      required: false
      style: form
      explode: true
      schema:
        type: integer
